"use strict";(self.webpackChunkrealran=self.webpackChunkrealran||[]).push([[6],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1449:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={id:"overview",title:"Overview",sidebar_position:1},c=void 0,u={unversionedId:"Getting Started/overview",id:"Getting Started/overview",title:"Overview",description:"RealRan is dedicated to building the Multi-party Trust Protocol in cryptography to power the next generation computing scenario, including Hybrid Smart Contract, Web3 and Metaverse.",source:"@site/docs/Getting Started/Overview.md",sourceDirName:"Getting Started",slug:"/Getting Started/overview",permalink:"/Docs/Getting Started/overview",editUrl:"https://github.com/realran/Docs/tree/main/docs/Getting Started/Overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"overview",title:"Overview",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Get a Random Number",permalink:"/Docs/Getting Started/Get a Random Number"}},s={},d=[{value:"About VRF",id:"about-vrf",level:2},{value:"How to use",id:"how-to-use",level:2}],p={toc:d};function m(e){var t=e.components,l=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"realran"},"RealRan"),(0,a.kt)("p",null,"RealRan is dedicated to building the Multi-party Trust Protocol in cryptography to power the next generation computing scenario, including Hybrid Smart Contract, Web3 and Metaverse."),(0,a.kt)("h2",{id:"about-vrf"},"About VRF"),(0,a.kt)("p",null,"In VRF 1.0, we leverage the PlatON built-in contract to generate on-chain random values in a more developer-friendly and Chainlink-compatible way. Based on the previous version, we released VRF 2.0 beta version, which has been deployed on the PlatON Devnet."),(0,a.kt)("p",null,"The version mainly introduces an off-chain value generating mechanism. After receiving the event, the off-chain service integrating the BN254 curve algorithm generates the random values and proofs, and then verifies them on the chain before fulfilling the values to the user contract."),(0,a.kt)("p",null,"VRF2.1 \u7248\u672c\u53ea\u8981\u6709\u4e24\u70b9\u6539\u52a8\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"VRF Service \u4f7f\u7528 ECDSA \u5bc6\u94a5\u7b97\u6cd5"),(0,a.kt)("li",{parentName:"ol"},"VRF \u670d\u52a1\u5f00\u59cb\u8ba1\u8d39\uff0c\u7528\u6237\u521b\u5efa\u8ba2\u9605\u540e\uff0c\u9700\u8981\u901a\u8fc7 VRFCoordinator \u5408\u7ea6\u5411\u8ba2\u9605\u5145\u503c LAT\uff0c\u5426\u5219\u65e0\u6cd5\u4f7f\u7528\u670d\u52a1")),(0,a.kt)("p",null,"The brief contract structure design is as follows:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"contracts_overview",src:n(1823).Z,width:"1082",height:"156"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"VRF Service : \u4e00\u79cd\u4f7f\u7528 ECDSA \u5bc6\u94a5\u7b97\u6cd5\u751f\u6210\u4e0d\u53ef\u9884\u6d4b\u6027\u548c\u53ef\u9a8c\u8bc1\u7684\u968f\u673a\u6570\u7684\u670d\u52a1\uff0c\u540c\u65f6\u8be5\u968f\u673a\u6570\u8fd8\u5177\u6709\u552f\u4e00\u6027\u3001\u6297\u78b0\u649e\u548c\u968f\u673a\u6027\u3002")),(0,a.kt)("h2",{id:"how-to-use"},"How to use"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/realran/VRFContract/blob/main/sample/VRFConsumerV2.sol"},"VRFConsumerV2.sol")," is a sample contract, you can refer to this contract and do the following steps to easily enable VRF integration :"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Get the ",(0,a.kt)("inlineCode",{parentName:"li"},"Key Hash")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"VRFCoordinator")," address based on the network in the and update the ",(0,a.kt)("inlineCode",{parentName:"li"},"keyHash")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"vrfCoordinator")," address in the  ",(0,a.kt)("inlineCode",{parentName:"li"},"VRFConsumerV2.sol"),"."),(0,a.kt)("li",{parentName:"ol"},"Deploy the ",(0,a.kt)("inlineCode",{parentName:"li"},"VRFConsumerV2.sol")," contract. This example contract includes the ",(0,a.kt)("inlineCode",{parentName:"li"},"createNewSubscription()")," function in the ",(0,a.kt)("inlineCode",{parentName:"li"},"constructor()")," that creates the subscription and adds itself as a consumer automatically when you deploy it."),(0,a.kt)("li",{parentName:"ol"},"\u76f4\u63a5\u4f7f\u7528\u94b1\u5305\u8d26\u6237\u901a\u8fc7\u8c03\u7528 VRFCoordinator \u5408\u7ea6\u7684 fundSubscription \u65b9\u6cd5\u5bf9\u8ba2\u9605\u8fdb\u884c\u5145\u503c\u3002"),(0,a.kt)("li",{parentName:"ol"},"Call the ",(0,a.kt)("inlineCode",{parentName:"li"},"requestRandomWords()")," function in the ",(0,a.kt)("inlineCode",{parentName:"li"},"VRFConsumerV2.col")," contract to asynchronously request random values which are returned via the callback function ",(0,a.kt)("inlineCode",{parentName:"li"},"fulfillRandomWords()"),".")),(0,a.kt)("p",null,"For more, please refer to\uff1a",(0,a.kt)("a",{parentName:"p",href:"./Get%20a%20Random%20Number"},"Get a Random Number")))}m.isMDXComponent=!0},1823:function(e,t,n){t.Z=n.p+"assets/images/contracts_overview-52ecaa237e6b561dd75bef99e70ded0d.png"}}]);